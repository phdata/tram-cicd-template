## Snowflake JDBC

# By using this software you accept the EULA at <a href='https://www.phdata.io/eula/'>https://www.phdata.io/eula/</a>
tram.general.acceptEula=false
# Url to connect to snowflake. snowflake
tram.snowflake.url={{ example: snowflake://corp.snowflakecomputing.com }}
# Username to connect to Snowflake
tram.snowflake.user={{ example: user }}
# Snowflake password corresponding to tram.snowflake.user
tram.snowflake.password=

## Metadata

# Database owned by Tram
tram.metadata.database=tram
# Schema owned by Tram
tram.metadata.schema=tram

## General application settings

# Enable resetting Snowflake object properties to the state known by Tram. Note: If this is set to true,
# any property changed outside of Tram will be reverted to the Tram values. This will also delete any properties
# created outside of tram.
tram.provisioning.properties.sync=false

# Max number of threads that workspace provisioning should run with.  If a property is set to 0,
# the default value will be the ForkJoinPool common pool size (cores-1 by default).
tram.provisioning.numThreads=1

tram.snowflake.metricsEnabled=false


## LDAP Group Synchronization

# Storage for ldap group/user attributes used by Concert.
# Valid values are [snowflake, derby]. Defaults to Derby
tram.provisioning.ldap.storage=snowflake

# User distinguished name with read access to active directory
concert.ldap.userdn={{ example: CN=tram,OU=users,DC=phdata,DC=io }}
# Password for 'concert.ldap.userdn'
concert.ldap.password=
# LDAP url, including scheme, example: ldaps://company.com:636
concert.ldap.url={{ example: ldap://corp.com:389 }}

# Url for the to store ldap information. Must point at a database and schema. This database and
# schema must be populated manually with tables. See user-manual.md for setup instructions
concert.snowflake.url={{ example: jdbc:snowflake://corp.snowflakecomputing.com?db=TRAM&schema=TRAM }}

